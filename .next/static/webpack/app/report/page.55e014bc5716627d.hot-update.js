/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/report/page",{

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5CDivyam%5C%5COneDrive%5C%5CDesktop%5C%5CStreetFix2%5C%5Capp%5C%5Creport%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!":
/*!**************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5CDivyam%5C%5COneDrive%5C%5CDesktop%5C%5CStreetFix2%5C%5Capp%5C%5Creport%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false! ***!
  \**************************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./app/report/page.tsx */ \"(app-pages-browser)/./app/report/page.tsx\", 23));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyQyUzQSU1QyU1Q1VzZXJzJTVDJTVDRGl2eWFtJTVDJTVDT25lRHJpdmUlNUMlNUNEZXNrdG9wJTVDJTVDU3RyZWV0Rml4MiU1QyU1Q2FwcCU1QyU1Q3JlcG9ydCU1QyU1Q3BhZ2UudHN4JTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJnNlcnZlcj1mYWxzZSEiLCJtYXBwaW5ncyI6IkFBQUEsMEtBQTRHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8/MmJjZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkM6XFxcXFVzZXJzXFxcXERpdnlhbVxcXFxPbmVEcml2ZVxcXFxEZXNrdG9wXFxcXFN0cmVldEZpeDJcXFxcYXBwXFxcXHJlcG9ydFxcXFxwYWdlLnRzeFwiKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5CDivyam%5C%5COneDrive%5C%5CDesktop%5C%5CStreetFix2%5C%5Capp%5C%5Creport%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/report/page.tsx":
/*!*****************************!*\
  !*** ./app/report/page.tsx ***!
  \*****************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// \"use client\"\n// import { useState, useRef } from 'react'\n// import { createClientComponentClient } from '@supabase/auth-helpers-nextjs'\n// import { motion } from 'framer-motion'\n// import { Upload, MapPin, Camera, CheckCircle, Loader2, AlertCircle, Zap, FileImage } from 'lucide-react'\n// import { Button } from '@/components/ui/button'\n// import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\n// import { Input } from '@/components/ui/input'\n// import { Label } from '@/components/ui/label'\n// import { Textarea } from '@/components/ui/textarea'\n// import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select'\n// import { Progress } from '@/components/ui/progress'\n// export default function ReportPage() {\n//   const supabase = createClientComponentClient();\n//   const [dragActive, setDragActive] = useState(false)\n//   const [selectedFile, setSelectedFile] = useState<File | null>(null)\n//   const [preview, setPreview] = useState<string>('')\n//   const [category, setCategory] = useState('')\n//   const [description, setDescription] = useState('')\n//   const [location, setLocation] = useState('Auto-detecting location...')\n//   const [analysisStarted, setAnalysisStarted] = useState(false)\n//   const [analysisComplete, setAnalysisComplete] = useState(false)\n//   const [confidence, setConfidence] = useState(0)\n//   const [detectedIssue, setDetectedIssue] = useState('')\n//   const [isSubmitting, setIsSubmitting] = useState(false)\n//   const [submitted, setSubmitted] = useState(false)\n//   const [sessionData, setSessionData] = useState<any>(null)\n//   const fileInputRef = useRef<HTMLInputElement>(null)\n//   const categories = [\n//     'Potholes',\n//     'Garbage Dumps', \n//     'Stray Animals',\n//     'Damaged Infrastructure',\n//     'Open Manholes',\n//     'Broken Street Lights',\n//     'Other'\n//   ]\n//   const handleDrag = (e: React.DragEvent) => {\n//     e.preventDefault()\n//     e.stopPropagation()\n//     if (e.type === 'dragenter' || e.type === 'dragover') {\n//       setDragActive(true)\n//     } else if (e.type === 'dragleave') {\n//       setDragActive(false)\n//     }\n//   }\n//   const handleDrop = (e: React.DragEvent) => {\n//     e.preventDefault()\n//     e.stopPropagation()\n//     setDragActive(false)\n//     if (e.dataTransfer.files && e.dataTransfer.files[0]) {\n//       handleFileUpload(e.dataTransfer.files[0])\n//     }\n//   }\n//   const handleFileSelect = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     if (e.target.files && e.target.files[0]) {\n//       handleFileUpload(e.target.files[0])\n//     }\n//   }\n//   const handleFileUpload = (file: File) => {\n//     // Validate file type and size\n//     const validImageTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/webp']\n//     if (!validImageTypes.includes(file.type)) {\n//       alert('Please select a valid image file (JPEG, PNG, GIF, WEBP)')\n//       return\n//     }\n//     // Check file size (limit to 5MB)\n//     if (file.size > 5 * 1024 * 1024) {\n//       alert('File size exceeds 5MB limit. Please select a smaller image.')\n//       return\n//     }\n//     setSelectedFile(file)\n//     const reader = new FileReader()\n//     reader.onload = (e) => {\n//       setPreview(e.target?.result as string)\n//       startAIAnalysis()\n//     }\n//     reader.onerror = () => {\n//       console.error('FileReader error:', reader.error)\n//       alert('Error reading file. Please try another image.')\n//     }\n//     reader.readAsDataURL(file)\n//   }\n//   const startAIAnalysis = () => {\n//     setAnalysisStarted(true)\n//     setAnalysisComplete(false)\n//     setConfidence(0)\n//     const analysisSteps = [\n//       { delay: 500, confidence: 25 },\n//       { delay: 1000, confidence: 50 },\n//       { delay: 1500, confidence: 75 },\n//       { delay: 2000, confidence: 95 }\n//     ]\n//     analysisSteps.forEach((step, index) => {\n//       setTimeout(() => {\n//         setConfidence(step.confidence)\n//         if (index === analysisSteps.length - 1) {\n//           setAnalysisComplete(true)\n//           setDetectedIssue('Pothole')\n//           setCategory('Potholes')\n//           setLocation('123 Main St, Downtown District')\n//         }\n//       }, step.delay)\n//     })\n//   }\n//   const handleSubmit = async (e: React.FormEvent) => {\n//     e.preventDefault()\n//     if (!selectedFile) {\n//       alert('Please select an image')\n//       return\n//     }\n//     if (!category || !description) {\n//       alert('Please fill in all required fields')\n//       return\n//     }\n//     setIsSubmitting(true)\n//     try {\n//       // Get the current authenticated user reliably\n//       const { data: { user } } = await supabase.auth.getUser();\n//       setSessionData(user);\n//       if (!user) {\n//         throw new Error('You must be logged in to submit a report.');\n//       }\n//       const fileExt = selectedFile.name.split('.').pop() || 'jpg';\n//       const timestamp = Date.now();\n//       const fileName = `report-${timestamp}.${fileExt}`;\n//       // Define publicUrl outside the try block so it's accessible for reportData\n//       let publicUrl = '';\n//       try {\n//         // Validate file again before processing\n//         if (!selectedFile) {\n//           throw new Error('No file selected');\n//         }\n//         const validImageTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/webp'];\n//         if (!validImageTypes.includes(selectedFile.type)) {\n//           throw new Error('Invalid file type. Please select a valid image file.');\n//         }\n//         if (selectedFile.size > 5 * 1024 * 1024) {\n//           throw new Error('File size exceeds 5MB limit.');\n//         }\n//         // Upload the file to the server using the API endpoint\n//         const formData = new FormData();\n//         formData.append('file', selectedFile);\n//         const uploadResponse = await fetch('/api/upload', {\n//           method: 'POST',\n//           body: formData,\n//         });\n//         if (!uploadResponse.ok) {\n//           const errorData = await uploadResponse.json();\n//           throw new Error(`Upload failed: ${errorData.error || uploadResponse.statusText}`);\n//         }\n//         const uploadResult = await uploadResponse.json();\n//         // Use the public URL returned from the API\n//         publicUrl = uploadResult.publicUrl;\n//       } catch (error) {\n//         console.error('Error processing file:', error);\n//         throw new Error(error instanceof Error ? error.message : 'Failed to process the image file');\n//       }\n//       const reportData = {\n//         title: detectedIssue || category,\n//         description,\n//         location: location || 'Location not specified',\n//         status: 'pending',\n//         reporter_id: user.id, // Always set to the current user's id\n//         image_path: publicUrl,\n//         category,\n//         priority: 'medium',\n//         confidence: confidence || 0\n//       };\n//       // Log the report data for debugging\n//       console.log('Submitting report data:', reportData);\n//       try {\n//         const { data, error } = await supabase\n//           .from('reports')\n//           .insert([reportData])\n//           .select();\n//         if (error) {\n//           // Error occurred during database insertion\n//           console.error('Supabase insert error:', error);\n//           throw new Error(`Database error: ${error.message || error.details || 'Unknown database error'}`);\n//         }\n//         if (!data || data.length === 0) {\n//           throw new Error('Report was not saved properly');\n//         }\n//         console.log('Report submitted successfully:', data);\n//       } catch (dbError) {\n//         console.error('Database operation failed:', dbError);\n//         throw dbError;\n//       }\n//       setSubmitted(true);\n//     } catch (error) {\n//       console.error('Submission error:', error);\n//       // Provide more specific error messages based on the error type\n//       let errorMessage = 'Unknown error';\n//       if (error instanceof Error) {\n//         errorMessage = error.message;\n//         // Check for specific error patterns\n//         if (errorMessage.includes('foreign key constraint')) {\n//           errorMessage = 'Authentication required to submit reports';\n//         } else if (errorMessage.includes('not found')) {\n//           errorMessage = 'The reports table does not exist';\n//         } else if (errorMessage.includes('permission denied')) {\n//           errorMessage = 'You do not have permission to submit reports';\n//         }\n//       }\n//       alert(`Error submitting report: ${errorMessage}`)\n//     } finally {\n//       setIsSubmitting(false)\n//     }\n//   }\n//   if (submitted) {\n//     return (\n//       <div className=\"min-h-screen bg-muted/30 py-12\">\n//         <div className=\"container max-w-2xl mx-auto px-4 sm:px-6 lg:px-8\">\n//           <motion.div initial={{ opacity: 0, scale: 0.9 }} animate={{ opacity: 1, scale: 1 }} transition={{ duration: 0.5 }}>\n//             <Card className=\"shadow-xl\">\n//               <CardContent className=\"text-center p-8\">\n//                 <motion.div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-6\" initial={{ scale: 0 }} animate={{ scale: 1 }} transition={{ delay: 0.2, type: \"spring\" }}>\n//                   <CheckCircle className=\"w-8 h-8 text-white\" />\n//                 </motion.div>\n//                 <h2 className=\"text-2xl font-bold mb-4\">Report Submitted Successfully!</h2>\n//                 <p className=\"text-muted-foreground mb-6\">\n//                   Thank you for helping make our city better. Your report has been received and is being reviewed.\n//                 </p>\n//                 <Card className=\"bg-blue-50 dark:bg-blue-950 p-4 mb-6\">\n//                   <div className=\"space-y-2 text-sm\">\n//                     <p><strong>Report ID:</strong> UR-2024-{Math.floor(Math.random() * 10000)}</p>\n//                     <p><strong>Estimated Response:</strong> 24-48 hours</p>\n//                     {sessionData?.user && (\n//                       <p><strong>Reward Tokens:</strong> +50 UT (pending verification)</p>\n//                     )}\n//                     {!sessionData?.user && (\n//                       <p><strong>Note:</strong> Sign in to earn reward tokens for your reports</p>\n//                     )}\n//                   </div>\n//                 </Card>\n//                 <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n//                   <Button onClick={() => window.location.reload()}>Report Another Issue</Button>\n//                   <Button variant=\"outline\" onClick={() => window.location.href = '/dashboard'}>View Dashboard</Button>\n//                 </div>\n//               </CardContent>\n//             </Card>\n//           </motion.div>\n//         </div>\n//       </div>\n//     )\n//   }\n//   return (\n//     <div className=\"min-h-screen bg-muted/30 py-12\">\n//       <div className=\"container max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n//         <motion.div className=\"text-center mb-12\" initial={{ opacity: 0, y: -20 }} animate={{ opacity: 1, y: 0 }}>\n//           <h1 className=\"text-3xl md:text-4xl font-bold mb-4\">Report an Issue</h1>\n//           <p className=\"text-xl text-muted-foreground\">Help us make your city better by reporting urban issues</p>\n//         </motion.div>\n//         <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n//           <motion.div initial={{ opacity: 0, x: -50 }} animate={{ opacity: 1, x: 0 }} transition={{ delay: 0.2 }}>\n//             <Card className=\"shadow-lg\">\n//               <CardHeader>\n//                 <CardTitle className=\"flex items-center gap-2\">\n//                   <FileImage className=\"w-5 h-5\" /> Upload Image\n//                 </CardTitle>\n//               </CardHeader>\n//               <CardContent className=\"space-y-6\">\n//                 <div\n//                   className={`relative border-2 border-dashed rounded-xl p-8 text-center transition-all duration-300 ${\n//                     dragActive ? 'border-primary bg-primary/5' : selectedFile ? 'border-green-500 bg-green-50 dark:bg-green-950' : 'border-muted-foreground/25 hover:border-primary/50'\n//                   }`}\n//                   onDragEnter={handleDrag}\n//                   onDragLeave={handleDrag}\n//                   onDragOver={handleDrag}\n//                   onDrop={handleDrop}\n//                 >\n//                   <input ref={fileInputRef} type=\"file\" accept=\"image/*\" onChange={handleFileSelect} className=\"hidden\" />\n//                   {preview ? (\n//                     <div className=\"space-y-4\">\n//                       <img src={preview} alt=\"Preview\" className=\"w-full h-48 object-cover rounded-lg\" />\n//                       <p className=\"text-sm text-muted-foreground\">{selectedFile?.name}</p>\n//                     </div>\n//                   ) : (\n//                     <div className=\"space-y-4\">\n//                       <motion.div className=\"w-16 h-16 bg-muted rounded-full flex items-center justify-center mx-auto\" whileHover={{ scale: 1.1 }}>\n//                         <Upload className=\"w-8 h-8 text-muted-foreground\" />\n//                       </motion.div>\n//                       <div>\n//                         <p className=\"font-medium\">Drop your image here, or{' '}\n//                           <button onClick={() => fileInputRef.current?.click()} className=\"text-primary hover:underline\">browse</button>\n//                         </p>\n//                         <p className=\"text-sm text-muted-foreground mt-1\">PNG, JPG, GIF up to 10MB</p>\n//                       </div>\n//                     </div>\n//                   )}\n//                 </div>\n//                 {!preview && (\n//                   <Button onClick={() => fileInputRef.current?.click()} className=\"w-full\" size=\"lg\">\n//                     <Camera className=\"w-5 h-5 mr-2\" /> Take Photo\n//                   </Button>\n//                 )}\n//               </CardContent>\n//             </Card>\n//             {analysisStarted && (\n//               <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} className=\"mt-6\">\n//                 <Card className=\"shadow-lg\">\n//                   <CardHeader>\n//                     <CardTitle className=\"flex items-center gap-2\">\n//                       <Zap className=\"w-5 h-5 text-purple-500\" /> AI Analysis\n//                     </CardTitle>\n//                   </CardHeader>\n//                   <CardContent className=\"space-y-4\">\n//                     <div className=\"space-y-2\">\n//                       <div className=\"flex justify-between text-sm\">\n//                         <span>Analysis Progress</span>\n//                         <span>{confidence}%</span>\n//                       </div>\n//                       <Progress value={confidence} className=\"h-2\" />\n//                     </div>\n//                     {analysisComplete && (\n//                       <motion.div initial={{ opacity: 0, scale: 0.9 }} animate={{ opacity: 1, scale: 1 }} className=\"bg-green-50 dark:bg-green-950 p-4 rounded-lg border border-green-200 dark:border-green-800\">\n//                         <div className=\"flex items-center gap-2 mb-2\">\n//                           <CheckCircle className=\"w-5 h-5 text-green-600\" />\n//                           <span className=\"font-semibold text-green-800 dark:text-green-200\">\n//                             Detected: {detectedIssue}\n//                           </span>\n//                         </div>\n//                         <p className=\"text-sm text-green-700 dark:text-green-300\">\n//                           Confidence: {confidence}% - This appears to be a road pothole requiring immediate attention.\n//                         </p>\n//                       </motion.div>\n//                     )}\n//                   </CardContent>\n//                 </Card>\n//               </motion.div>\n//             )}\n//           </motion.div>\n//           <motion.div initial={{ opacity: 0, x: 50 }} animate={{ opacity: 1, x: 0 }} transition={{ delay: 0.4 }}>\n//             <Card className=\"shadow-lg\">\n//               <CardHeader>\n//                 <CardTitle>Report Details</CardTitle>\n//               </CardHeader>\n//               <CardContent>\n//                 <form onSubmit={handleSubmit} className=\"space-y-6\">\n//                   <div className=\"space-y-2\">\n//                     <Label htmlFor=\"category\">Issue Category</Label>\n//                     <Select value={category} onValueChange={setCategory}>\n//                       <SelectTrigger>\n//                         <SelectValue placeholder=\"Select category\" />\n//                       </SelectTrigger>\n//                       <SelectContent>\n//                         {categories.map((cat) => (\n//                           <SelectItem key={cat} value={cat}>{cat}</SelectItem>\n//                         ))}\n//                       </SelectContent>\n//                     </Select>\n//                   </div>\n//                   <div className=\"space-y-2\">\n//                     <Label htmlFor=\"location\">Location</Label>\n//                     <div className=\"relative\">\n//                       <MapPin className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-muted-foreground\" />\n//                       <Input id=\"location\" value={location} onChange={(e) => setLocation(e.target.value)} className=\"pl-10\" placeholder=\"Enter location\" />\n//                     </div>\n//                   </div>\n//                   <div className=\"space-y-2\">\n//                     <Label htmlFor=\"description\">Description</Label>\n//                     <Textarea id=\"description\" value={description} onChange={(e) => setDescription(e.target.value)} placeholder=\"Provide additional details about the issue...\" rows={4} />\n//                   </div>\n//                   <Button type=\"submit\" className=\"w-full\" size=\"lg\" disabled={!selectedFile || !category || isSubmitting}>\n//                     {isSubmitting ? (\n//                       <>\n//                         <Loader2 className=\"w-4 h-4 mr-2 animate-spin\" /> Submitting Report...\n//                       </>\n//                     ) : (\n//                       <>\n//                         <Upload className=\"w-4 h-4 mr-2\" /> Submit Report\n//                       </>\n//                     )}\n//                   </Button>\n//                 </form>\n//               </CardContent>\n//             </Card>\n//             <Card className=\"mt-6 bg-blue-50 dark:bg-blue-950 border-blue-200 dark:border-blue-800\">\n//               <CardContent className=\"p-4\">\n//                 <div className=\"flex items-start gap-3\">\n//                   <AlertCircle className=\"w-5 h-5 text-blue-600 mt-0.5\" />\n//                   <div>\n//                     <h4 className=\"font-semibold text-blue-900 dark:text-blue-100\">What happens next?</h4>\n//                     <ul className=\"text-sm text-blue-800 dark:text-blue-200 mt-2 space-y-1\">\n//                       <li>• Your report will be verified by our AI system</li>\n//                       <li>• Local authorities will be notified within 24 hours</li>\n//                       <li>• You'll earn reward tokens upon verification</li>\n//                       <li>• Track progress in your dashboard</li>\n//                     </ul>\n//                   </div>\n//                 </div>\n//               </CardContent>\n//             </Card>\n//           </motion.div>\n//         </div>\n//       </div>\n//     </div>\n//   )\n// }\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/report/page.tsx\n"));

/***/ })

});